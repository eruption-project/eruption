#  SPDX-License-Identifier: GPL-3.0-or-later
#
#  This file is part of Eruption.
#
#  Eruption is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Eruption is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Eruption.  If not, see <http://www.gnu.org/licenses/>.
#
#  Copyright (c) 2019-2023, The Eruption Development Team

on: [push, pull_request]
name: Continuous integration
jobs:
  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Dependencies
        run: "sudo apt-get update -y -qq; sudo apt-get install -y -qq protobuf-compiler libprotobuf-dev libsystemd-dev libusb-1.0-0-dev libhidapi-dev libevdev-dev libudev-dev libdbus-1-dev libpulse-dev libluajit-5.1-dev libx11-dev libxrandr-dev libgtk-3-dev libgdk-pixbuf2.0-dev libatk1.0-dev libpango1.0-dev libcairo2-dev libgtksourceview-4-dev"
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - run: cargo clippy --all
  tests:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - nightly
    steps:
      - name: Setup Dependencies
        run: "sudo apt-get update -y -qq; sudo apt-get install -y -qq protobuf-compiler libprotobuf-dev libsystemd-dev libusb-1.0-0-dev libhidapi-dev libevdev-dev libudev-dev libdbus-1-dev libpulse-dev libluajit-5.1-dev libx11-dev libxrandr-dev libgtk-3-dev libgdk-pixbuf2.0-dev libatk1.0-dev libpango1.0-dev libcairo2-dev libgtksourceview-4-dev"
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo build --all
