<?xml version="1.0" encoding="UTF-8"?>
<!--

 Author: Pavel Artyomkin <artmkin@gmail.com>
 Copyright (C) 2011 Pavel Artyomkin <artmkin@gmail.com>

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Library General Public
 License as published by the Free Software Foundation; either
 version 2 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Library General Public License for more details.

 You should have received a copy of the GNU Library General Public
 License along with this library; if not, see <http://www.gnu.org/licenses/>.

-->
<language id="proto" name="Protobuf" version="2.0" _section="Other">
  <metadata>
    <property name="mimetypes">text/x-protobuf</property>
    <property name="globs">*.proto</property>
    <property name="line-comment-start">//</property>
    <property name="block-comment-start">/*</property>
    <property name="block-comment-end">*/</property>
  </metadata>

  <styles>
    <style id="comment" name="Comment" map-to="def:comment"/>
    <style id="statement" name="Statement" map-to="def:preprocessor"/>
    <style id="variable" name="Variable" map-to="def:type"/>
    <style id="type" name="Data Type" map-to="def:type"/>
    <style id="keyword" name="Keyword" map-to="def:keyword"/>
    <style id="boolean" name="Boolean value" map-to="def:boolean"/>
    <style id="string" name="String" map-to="def:string"/>
  </styles>

  <definitions>

    <context id="syntax">
      <match>(syntax)\s+=\s+("proto2"|"proto3");</match>
      <include>
        <context sub-pattern="1" style-ref="statement"/>
        <context sub-pattern="2" style-ref="string"/>
      </include>
    </context>

    <context id="package">
      <match>(package)\s+(.*);</match>
      <include>
        <context sub-pattern="1" style-ref="statement"/>
        <context sub-pattern="2" style-ref="string"/>
      </include>
    </context>

    <context id="import">
      <match>(import)(\s+(weak|public))?\s+(".*");</match>
      <include>
        <context sub-pattern="1" style-ref="statement"/>
        <context sub-pattern="2" style-ref="statement"/>
        <context sub-pattern="4" style-ref="string"/>
      </include>
    </context>

    <context id="variable" style-ref="variable">
      <match>[$@%][$]?[a-zA-Z_][a-zA-Z0-9_]*</match>
    </context>

    <context id="string" style-ref="string" end-at-line-end="true" class="string" class-disabled="no-spell-check">
      <start>"</start>
      <end>"</end>
    </context>

    <context id="keywords" style-ref="keyword">
      <keyword>default</keyword>
      <keyword>deprecated</keyword>
      <keyword>enum</keyword>
      <keyword>extend</keyword>
      <keyword>extensions</keyword>
      <keyword>message</keyword>
      <keyword>oneof</keyword>
      <keyword>optional</keyword>
      <keyword>option</keyword>
      <keyword>package</keyword>
      <keyword>packed</keyword>
      <keyword>repeated</keyword>
      <keyword>required</keyword>
      <keyword>returns</keyword>
      <keyword>rpc</keyword>
      <keyword>service</keyword>
      <keyword>to</keyword>
    </context>

    <context id="types" style-ref="type">
      <keyword>double</keyword>
      <keyword>float</keyword>
      <keyword>int32</keyword>
      <keyword>int64</keyword>
      <keyword>uint32</keyword>
      <keyword>uint64</keyword>
      <keyword>sint32</keyword>
      <keyword>sint64</keyword>
      <keyword>fixed32</keyword>
      <keyword>fixed64</keyword>
      <keyword>sfixed32</keyword>
      <keyword>sfixed64</keyword>
      <keyword>bool</keyword>
      <keyword>string</keyword>
      <keyword>bytes</keyword>
    </context>

    <context id="boolean" style-ref="boolean">
      <keyword>true</keyword>
      <keyword>false</keyword>
    </context>

    <context id="proto" class="no-spell-check">
      <include>
        <context ref="def:c-like-comment" style-ref="comment"/>
        <context ref="def:c-like-comment-multiline" style-ref="comment"/>
        <context ref="syntax"/>
        <context ref="package"/>
        <context ref="import"/>
        <context ref="variable"/>
        <context ref="string"/>
        <context ref="keywords"/>
        <context ref="types"/>
        <context ref="boolean"/>
      </include>
    </context>
  </definitions>
</language>
