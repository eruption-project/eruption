#compdef eruption-fx-proxy

autoload -U is-at-least

_eruption-fx-proxy() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-c+[Die zu verwendende Konfigurationsdatei]:CONFIG: ' \
'--config=[Die zu verwendende Konfigurationsdatei]:CONFIG: ' \
'*-v[Verboser Modus (-v, -vv, -vvv, etc.)]' \
'*--verbose[Verboser Modus (-v, -vv, -vvv, etc.)]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_eruption-fx-proxy_commands" \
"*::: :->eruption-fx-proxy" \
&& ret=0
    case $state in
    (eruption-fx-proxy)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruption-fx-proxy-command-$line[1]:"
        case $line[1] in
            (daemon)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(completions)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
':shell:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_eruption-fx-proxy__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruption-fx-proxy-help-command-$line[1]:"
        case $line[1] in
            (daemon)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(completions)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_eruption-fx-proxy_commands] )) ||
_eruption-fx-proxy_commands() {
    local commands; commands=(
'daemon:Im Hintergrund ausführen' \
'completions:Shell Definitionen für Autovervollständigung erzeugen' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruption-fx-proxy commands' commands "$@"
}
(( $+functions[_eruption-fx-proxy__completions_commands] )) ||
_eruption-fx-proxy__completions_commands() {
    local commands; commands=()
    _describe -t commands 'eruption-fx-proxy completions commands' commands "$@"
}
(( $+functions[_eruption-fx-proxy__help__completions_commands] )) ||
_eruption-fx-proxy__help__completions_commands() {
    local commands; commands=()
    _describe -t commands 'eruption-fx-proxy help completions commands' commands "$@"
}
(( $+functions[_eruption-fx-proxy__daemon_commands] )) ||
_eruption-fx-proxy__daemon_commands() {
    local commands; commands=()
    _describe -t commands 'eruption-fx-proxy daemon commands' commands "$@"
}
(( $+functions[_eruption-fx-proxy__help__daemon_commands] )) ||
_eruption-fx-proxy__help__daemon_commands() {
    local commands; commands=()
    _describe -t commands 'eruption-fx-proxy help daemon commands' commands "$@"
}
(( $+functions[_eruption-fx-proxy__help_commands] )) ||
_eruption-fx-proxy__help_commands() {
    local commands; commands=(
'daemon:Im Hintergrund ausführen' \
'completions:Shell Definitionen für Autovervollständigung erzeugen' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruption-fx-proxy help commands' commands "$@"
}
(( $+functions[_eruption-fx-proxy__help__help_commands] )) ||
_eruption-fx-proxy__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'eruption-fx-proxy help help commands' commands "$@"
}

if [ "$funcstack[1]" = "_eruption-fx-proxy" ]; then
    _eruption-fx-proxy "$@"
else
    compdef _eruption-fx-proxy eruption-fx-proxy
fi
