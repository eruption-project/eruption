
using namespace System.Management.Automation
using namespace System.Management.Automation.Language

Register-ArgumentCompleter -Native -CommandName 'eruption-debug-tool' -ScriptBlock {
    param($wordToComplete, $commandAst, $cursorPosition)

    $commandElements = $commandAst.CommandElements
    $command = @(
        'eruption-debug-tool'
        for ($i = 1; $i -lt $commandElements.Count; $i++) {
            $element = $commandElements[$i]
            if ($element -isnot [StringConstantExpressionAst] -or
                $element.StringConstantType -ne [StringConstantType]::BareWord -or
                $element.Value.StartsWith('-') -or
                $element.Value -eq $wordToComplete) {
                break
        }
        $element.Value
    }) -join ';'

    $completions = @(switch ($command) {
        'eruption-debug-tool' {
            [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterName, 'Verbose mode (-v, -vv, -vvv, etc.)')
            [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterName, 'Verbose mode (-v, -vv, -vvv, etc.)')
            [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('-V', 'V', [CompletionResultType]::ParameterName, 'Print version')
            [CompletionResult]::new('--version', 'version', [CompletionResultType]::ParameterName, 'Print version')
            [CompletionResult]::new('list', 'list', [CompletionResultType]::ParameterValue, 'List available devices, use this first to find out the index of the device to use')
            [CompletionResult]::new('report', 'report', [CompletionResultType]::ParameterValue, 'Generate a report for the specified device')
            [CompletionResult]::new('trace', 'trace', [CompletionResultType]::ParameterValue, 'Dump a trace of events originating from the specified device (May hang the device)')
            [CompletionResult]::new('state-diff', 'state-diff', [CompletionResultType]::ParameterValue, 'Read out the device state and show differences to previous state (May hang the device)')
            [CompletionResult]::new('read', 'read', [CompletionResultType]::ParameterValue, 'Read a single USB HID feature report from device')
            [CompletionResult]::new('write', 'write', [CompletionResultType]::ParameterValue, 'Send a single USB HID feature report to device (dangerous)')
            [CompletionResult]::new('read-raw', 'read-raw', [CompletionResultType]::ParameterValue, 'Read data from device')
            [CompletionResult]::new('write-raw', 'write-raw', [CompletionResultType]::ParameterValue, 'Send data to device (dangerous)')
            [CompletionResult]::new('run-tests', 'run-tests', [CompletionResultType]::ParameterValue, 'Send a device specific init sequence and try to set colors')
            [CompletionResult]::new('utils', 'utils', [CompletionResultType]::ParameterValue, 'Special utility functions, like searching for CRC polynoms and parameters')
            [CompletionResult]::new('completions', 'completions', [CompletionResultType]::ParameterValue, 'Generate shell completions')
            [CompletionResult]::new('help', 'help', [CompletionResultType]::ParameterValue, 'Print this message or the help of the given subcommand(s)')
            break
        }
        'eruption-debug-tool;list' {
            [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'eruption-debug-tool;report' {
            [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'eruption-debug-tool;trace' {
            [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'eruption-debug-tool;state-diff' {
            [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'eruption-debug-tool;read' {
            [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'eruption-debug-tool;write' {
            [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'eruption-debug-tool;read-raw' {
            [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'eruption-debug-tool;write-raw' {
            [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'eruption-debug-tool;run-tests' {
            [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'eruption-debug-tool;utils' {
            [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('reverse-crc8', 'reverse-crc8', [CompletionResultType]::ParameterValue, 'Find CRC8 polynoms and init params by performing an exhaustive search')
            [CompletionResult]::new('help', 'help', [CompletionResultType]::ParameterValue, 'Print this message or the help of the given subcommand(s)')
            break
        }
        'eruption-debug-tool;utils;reverse-crc8' {
            [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'eruption-debug-tool;utils;help' {
            [CompletionResult]::new('reverse-crc8', 'reverse-crc8', [CompletionResultType]::ParameterValue, 'Find CRC8 polynoms and init params by performing an exhaustive search')
            [CompletionResult]::new('help', 'help', [CompletionResultType]::ParameterValue, 'Print this message or the help of the given subcommand(s)')
            break
        }
        'eruption-debug-tool;utils;help;reverse-crc8' {
            break
        }
        'eruption-debug-tool;utils;help;help' {
            break
        }
        'eruption-debug-tool;completions' {
            [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'eruption-debug-tool;help' {
            [CompletionResult]::new('list', 'list', [CompletionResultType]::ParameterValue, 'List available devices, use this first to find out the index of the device to use')
            [CompletionResult]::new('report', 'report', [CompletionResultType]::ParameterValue, 'Generate a report for the specified device')
            [CompletionResult]::new('trace', 'trace', [CompletionResultType]::ParameterValue, 'Dump a trace of events originating from the specified device (May hang the device)')
            [CompletionResult]::new('state-diff', 'state-diff', [CompletionResultType]::ParameterValue, 'Read out the device state and show differences to previous state (May hang the device)')
            [CompletionResult]::new('read', 'read', [CompletionResultType]::ParameterValue, 'Read a single USB HID feature report from device')
            [CompletionResult]::new('write', 'write', [CompletionResultType]::ParameterValue, 'Send a single USB HID feature report to device (dangerous)')
            [CompletionResult]::new('read-raw', 'read-raw', [CompletionResultType]::ParameterValue, 'Read data from device')
            [CompletionResult]::new('write-raw', 'write-raw', [CompletionResultType]::ParameterValue, 'Send data to device (dangerous)')
            [CompletionResult]::new('run-tests', 'run-tests', [CompletionResultType]::ParameterValue, 'Send a device specific init sequence and try to set colors')
            [CompletionResult]::new('utils', 'utils', [CompletionResultType]::ParameterValue, 'Special utility functions, like searching for CRC polynoms and parameters')
            [CompletionResult]::new('completions', 'completions', [CompletionResultType]::ParameterValue, 'Generate shell completions')
            [CompletionResult]::new('help', 'help', [CompletionResultType]::ParameterValue, 'Print this message or the help of the given subcommand(s)')
            break
        }
        'eruption-debug-tool;help;list' {
            break
        }
        'eruption-debug-tool;help;report' {
            break
        }
        'eruption-debug-tool;help;trace' {
            break
        }
        'eruption-debug-tool;help;state-diff' {
            break
        }
        'eruption-debug-tool;help;read' {
            break
        }
        'eruption-debug-tool;help;write' {
            break
        }
        'eruption-debug-tool;help;read-raw' {
            break
        }
        'eruption-debug-tool;help;write-raw' {
            break
        }
        'eruption-debug-tool;help;run-tests' {
            break
        }
        'eruption-debug-tool;help;utils' {
            [CompletionResult]::new('reverse-crc8', 'reverse-crc8', [CompletionResultType]::ParameterValue, 'Find CRC8 polynoms and init params by performing an exhaustive search')
            break
        }
        'eruption-debug-tool;help;utils;reverse-crc8' {
            break
        }
        'eruption-debug-tool;help;completions' {
            break
        }
        'eruption-debug-tool;help;help' {
            break
        }
    })

    $completions.Where{ $_.CompletionText -like "$wordToComplete*" } |
        Sort-Object -Property ListItemText
}
