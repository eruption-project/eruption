#compdef eruptionctl

autoload -U is-at-least

_eruptionctl() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-c+[Sets the configuration file to use]:CONFIG: ' \
'--config=[Sets the configuration file to use]:CONFIG: ' \
'*-v[Verbose mode (-v, -vv, -vvv, etc.)]' \
'*--verbose[Verbose mode (-v, -vv, -vvv, etc.)]' \
'-r[Repeat output until ctrl+c is pressed]' \
'--repeat[Repeat output until ctrl+c is pressed]' \
'-h[Print help information]' \
'--help[Print help information]' \
'-V[Print version information]' \
'--version[Print version information]' \
":: :_eruptionctl_commands" \
"*::: :->eruptionctl" \
&& ret=0
    case $state in
    (eruptionctl)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-command-$line[1]:"
        case $line[1] in
            (canvas)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
":: :_eruptionctl__canvas_commands" \
"*::: :->canvas" \
&& ret=0

    case $state in
    (canvas)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-canvas-command-$line[1]:"
        case $line[1] in
            (hue)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'::hue:' \
&& ret=0
;;
(saturation)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'::saturation:' \
&& ret=0
;;
(lightness)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'::lightness:' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__canvas__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-canvas-help-command-$line[1]:"
        case $line[1] in
            (hue)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(saturation)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(lightness)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(config)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
":: :_eruptionctl__config_commands" \
"*::: :->config" \
&& ret=0

    case $state in
    (config)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-config-command-$line[1]:"
        case $line[1] in
            (brightness)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'::brightness:' \
&& ret=0
;;
(soundfx)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'::enable:(true false)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__config__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-config-help-command-$line[1]:"
        case $line[1] in
            (brightness)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(soundfx)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(color-schemes)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
":: :_eruptionctl__color-schemes_commands" \
"*::: :->color-schemes" \
&& ret=0

    case $state in
    (color-schemes)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-color-schemes-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':name:' \
'*::colors:' \
&& ret=0
;;
(remove)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':name:' \
&& ret=0
;;
(import)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
":: :_eruptionctl__color-schemes__import_commands" \
"*::: :->import" \
&& ret=0

    case $state in
    (import)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-color-schemes-import-command-$line[1]:"
        case $line[1] in
            (pywal)
_arguments "${_arguments_options[@]}" \
'-o[Optimize palette]' \
'--optimize[Optimize palette]' \
'-h[Print help information]' \
'--help[Print help information]' \
'::file_name -- Optionally specify the file name to the pywal color scheme:_files' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__color-schemes__import__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-color-schemes-import-help-command-$line[1]:"
        case $line[1] in
            (pywal)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__color-schemes__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-color-schemes-help-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(remove)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(import)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__color-schemes__help__import_commands" \
"*::: :->import" \
&& ret=0

    case $state in
    (import)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-color-schemes-help-import-command-$line[1]:"
        case $line[1] in
            (pywal)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(devices)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
":: :_eruptionctl__devices_commands" \
"*::: :->devices" \
&& ret=0

    case $state in
    (devices)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-devices-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(info)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':device:' \
&& ret=0
;;
(status)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':device:' \
&& ret=0
;;
(brightness)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':device:' \
'::brightness:' \
&& ret=0
;;
(profile)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':device:' \
'::profile:' \
&& ret=0
;;
(dpi)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':device:' \
'::dpi:' \
&& ret=0
;;
(rate)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':device:' \
'::rate:' \
&& ret=0
;;
(debounce)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':device:' \
'::enable:(true false)' \
&& ret=0
;;
(distance)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':device:' \
'::param:' \
&& ret=0
;;
(angle-snapping)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':device:' \
'::enable:(true false)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__devices__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-devices-help-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(info)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(status)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(brightness)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(profile)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(dpi)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(rate)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(debounce)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(distance)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(angle-snapping)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(status)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
":: :_eruptionctl__status_commands" \
"*::: :->status" \
&& ret=0

    case $state in
    (status)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-status-command-$line[1]:"
        case $line[1] in
            (profile)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(slot)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__status__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-status-help-command-$line[1]:"
        case $line[1] in
            (profile)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(slot)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(switch)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
":: :_eruptionctl__switch_commands" \
"*::: :->switch" \
&& ret=0

    case $state in
    (switch)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-switch-command-$line[1]:"
        case $line[1] in
            (profile)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':profile_name:' \
&& ret=0
;;
(slot)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':index:' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__switch__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-switch-help-command-$line[1]:"
        case $line[1] in
            (profile)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(slot)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(profiles)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
":: :_eruptionctl__profiles_commands" \
"*::: :->profiles" \
&& ret=0

    case $state in
    (profiles)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-profiles-command-$line[1]:"
        case $line[1] in
            (info)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':profile_name:' \
&& ret=0
;;
(edit)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':profile_name:' \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__profiles__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-profiles-help-command-$line[1]:"
        case $line[1] in
            (info)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(edit)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(names)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
":: :_eruptionctl__names_commands" \
"*::: :->names" \
&& ret=0

    case $state in
    (names)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-names-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':slot_index:' \
':name:' \
&& ret=0
;;
(set-all)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'*::names:' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__names__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-names-help-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(set-all)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(scripts)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
":: :_eruptionctl__scripts_commands" \
"*::: :->scripts" \
&& ret=0

    case $state in
    (scripts)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-scripts-command-$line[1]:"
        case $line[1] in
            (info)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':script_name:' \
&& ret=0
;;
(edit)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':script_name:' \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__scripts__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-scripts-help-command-$line[1]:"
        case $line[1] in
            (info)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(edit)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(param)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'::script:' \
'::parameter:' \
'::value:' \
&& ret=0
;;
(completions)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':shell:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-help-command-$line[1]:"
        case $line[1] in
            (canvas)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__help__canvas_commands" \
"*::: :->canvas" \
&& ret=0

    case $state in
    (canvas)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-help-canvas-command-$line[1]:"
        case $line[1] in
            (hue)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(saturation)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(lightness)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(config)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__help__config_commands" \
"*::: :->config" \
&& ret=0

    case $state in
    (config)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-help-config-command-$line[1]:"
        case $line[1] in
            (brightness)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(soundfx)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(color-schemes)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__help__color-schemes_commands" \
"*::: :->color-schemes" \
&& ret=0

    case $state in
    (color-schemes)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-help-color-schemes-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(remove)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(import)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__help__color-schemes__import_commands" \
"*::: :->import" \
&& ret=0

    case $state in
    (import)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-help-color-schemes-import-command-$line[1]:"
        case $line[1] in
            (pywal)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(devices)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__help__devices_commands" \
"*::: :->devices" \
&& ret=0

    case $state in
    (devices)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-help-devices-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(info)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(status)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(brightness)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(profile)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(dpi)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(rate)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(debounce)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(distance)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(angle-snapping)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(status)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__help__status_commands" \
"*::: :->status" \
&& ret=0

    case $state in
    (status)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-help-status-command-$line[1]:"
        case $line[1] in
            (profile)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(slot)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(switch)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__help__switch_commands" \
"*::: :->switch" \
&& ret=0

    case $state in
    (switch)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-help-switch-command-$line[1]:"
        case $line[1] in
            (profile)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(slot)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(profiles)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__help__profiles_commands" \
"*::: :->profiles" \
&& ret=0

    case $state in
    (profiles)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-help-profiles-command-$line[1]:"
        case $line[1] in
            (info)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(edit)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(names)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__help__names_commands" \
"*::: :->names" \
&& ret=0

    case $state in
    (names)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-help-names-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(set-all)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(scripts)
_arguments "${_arguments_options[@]}" \
":: :_eruptionctl__help__scripts_commands" \
"*::: :->scripts" \
&& ret=0

    case $state in
    (scripts)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:eruptionctl-help-scripts-command-$line[1]:"
        case $line[1] in
            (info)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(edit)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(param)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(completions)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_eruptionctl_commands] )) ||
_eruptionctl_commands() {
    local commands; commands=(
'canvas:Configure post-processing filters of the global canvas' \
'config:Configuration related sub-commands' \
'color-schemes:Define, import or delete a named color scheme' \
'devices:Get or set some device specific configuration parameters' \
'status:Shows the currently active profile or slot' \
'switch:Switch to a different profile or slot' \
'profiles:Profile related sub-commands' \
'names:Naming related commands such as renaming of profile slots' \
'scripts:Script related sub-commands' \
'param:Get or set script parameters on the currently active profile' \
'completions:Generate shell completions' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__add_commands] )) ||
_eruptionctl__color-schemes__add_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl color-schemes add commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__help__add_commands] )) ||
_eruptionctl__color-schemes__help__add_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl color-schemes help add commands' commands "$@"
}
(( $+functions[_eruptionctl__help__color-schemes__add_commands] )) ||
_eruptionctl__help__color-schemes__add_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help color-schemes add commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__angle-snapping_commands] )) ||
_eruptionctl__devices__angle-snapping_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices angle-snapping commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__help__angle-snapping_commands] )) ||
_eruptionctl__devices__help__angle-snapping_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices help angle-snapping commands' commands "$@"
}
(( $+functions[_eruptionctl__help__devices__angle-snapping_commands] )) ||
_eruptionctl__help__devices__angle-snapping_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help devices angle-snapping commands' commands "$@"
}
(( $+functions[_eruptionctl__config__brightness_commands] )) ||
_eruptionctl__config__brightness_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl config brightness commands' commands "$@"
}
(( $+functions[_eruptionctl__config__help__brightness_commands] )) ||
_eruptionctl__config__help__brightness_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl config help brightness commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__brightness_commands] )) ||
_eruptionctl__devices__brightness_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices brightness commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__help__brightness_commands] )) ||
_eruptionctl__devices__help__brightness_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices help brightness commands' commands "$@"
}
(( $+functions[_eruptionctl__help__config__brightness_commands] )) ||
_eruptionctl__help__config__brightness_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help config brightness commands' commands "$@"
}
(( $+functions[_eruptionctl__help__devices__brightness_commands] )) ||
_eruptionctl__help__devices__brightness_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help devices brightness commands' commands "$@"
}
(( $+functions[_eruptionctl__canvas_commands] )) ||
_eruptionctl__canvas_commands() {
    local commands; commands=(
'hue:Get or set the global '\''hue'\'' adjustment during canvas post-processing' \
'saturation:Get or set the global '\''saturation'\'' adjustment during canvas post-processing' \
'lightness:Get or set the global '\''lightness'\'' adjustment during canvas post-processing' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl canvas commands' commands "$@"
}
(( $+functions[_eruptionctl__help__canvas_commands] )) ||
_eruptionctl__help__canvas_commands() {
    local commands; commands=(
'hue:Get or set the global '\''hue'\'' adjustment during canvas post-processing' \
'saturation:Get or set the global '\''saturation'\'' adjustment during canvas post-processing' \
'lightness:Get or set the global '\''lightness'\'' adjustment during canvas post-processing' \
    )
    _describe -t commands 'eruptionctl help canvas commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes_commands] )) ||
_eruptionctl__color-schemes_commands() {
    local commands; commands=(
'list:List all color schemes known to Eruption' \
'add:Add a new named color scheme' \
'remove:Remove a color scheme by name' \
'import:Import a color scheme from a file, e.g.: like the Pywal configuration' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl color-schemes commands' commands "$@"
}
(( $+functions[_eruptionctl__help__color-schemes_commands] )) ||
_eruptionctl__help__color-schemes_commands() {
    local commands; commands=(
'list:List all color schemes known to Eruption' \
'add:Add a new named color scheme' \
'remove:Remove a color scheme by name' \
'import:Import a color scheme from a file, e.g.: like the Pywal configuration' \
    )
    _describe -t commands 'eruptionctl help color-schemes commands' commands "$@"
}
(( $+functions[_eruptionctl__completions_commands] )) ||
_eruptionctl__completions_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl completions commands' commands "$@"
}
(( $+functions[_eruptionctl__help__completions_commands] )) ||
_eruptionctl__help__completions_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help completions commands' commands "$@"
}
(( $+functions[_eruptionctl__config_commands] )) ||
_eruptionctl__config_commands() {
    local commands; commands=(
'brightness:Get or set the global brightness of the LEDs' \
'soundfx:Get or set the state of SoundFX' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl config commands' commands "$@"
}
(( $+functions[_eruptionctl__help__config_commands] )) ||
_eruptionctl__help__config_commands() {
    local commands; commands=(
'brightness:Get or set the global brightness of the LEDs' \
'soundfx:Get or set the state of SoundFX' \
    )
    _describe -t commands 'eruptionctl help config commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__debounce_commands] )) ||
_eruptionctl__devices__debounce_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices debounce commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__help__debounce_commands] )) ||
_eruptionctl__devices__help__debounce_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices help debounce commands' commands "$@"
}
(( $+functions[_eruptionctl__help__devices__debounce_commands] )) ||
_eruptionctl__help__devices__debounce_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help devices debounce commands' commands "$@"
}
(( $+functions[_eruptionctl__devices_commands] )) ||
_eruptionctl__devices_commands() {
    local commands; commands=(
'list:List connected devices and their indices (run this first)' \
'info:Get information about a specific device' \
'status:Get status of a specific device' \
'brightness:Get or set the device specific brightness of the LEDs' \
'profile:Get or set the current profile (applicable for some devices)' \
'dpi:Get or set the DPI parameter (applicable for some mice)' \
'rate:Get or set the bus poll rate' \
'debounce:Get or set the debounce parameter (applicable for some mice)' \
'distance:Get or set the DCU parameter (applicable for some mice)' \
'angle-snapping:Get or set the angle-snapping parameter (applicable for some mice)' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl devices commands' commands "$@"
}
(( $+functions[_eruptionctl__help__devices_commands] )) ||
_eruptionctl__help__devices_commands() {
    local commands; commands=(
'list:List connected devices and their indices (run this first)' \
'info:Get information about a specific device' \
'status:Get status of a specific device' \
'brightness:Get or set the device specific brightness of the LEDs' \
'profile:Get or set the current profile (applicable for some devices)' \
'dpi:Get or set the DPI parameter (applicable for some mice)' \
'rate:Get or set the bus poll rate' \
'debounce:Get or set the debounce parameter (applicable for some mice)' \
'distance:Get or set the DCU parameter (applicable for some mice)' \
'angle-snapping:Get or set the angle-snapping parameter (applicable for some mice)' \
    )
    _describe -t commands 'eruptionctl help devices commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__distance_commands] )) ||
_eruptionctl__devices__distance_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices distance commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__help__distance_commands] )) ||
_eruptionctl__devices__help__distance_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices help distance commands' commands "$@"
}
(( $+functions[_eruptionctl__help__devices__distance_commands] )) ||
_eruptionctl__help__devices__distance_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help devices distance commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__dpi_commands] )) ||
_eruptionctl__devices__dpi_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices dpi commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__help__dpi_commands] )) ||
_eruptionctl__devices__help__dpi_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices help dpi commands' commands "$@"
}
(( $+functions[_eruptionctl__help__devices__dpi_commands] )) ||
_eruptionctl__help__devices__dpi_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help devices dpi commands' commands "$@"
}
(( $+functions[_eruptionctl__help__profiles__edit_commands] )) ||
_eruptionctl__help__profiles__edit_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help profiles edit commands' commands "$@"
}
(( $+functions[_eruptionctl__help__scripts__edit_commands] )) ||
_eruptionctl__help__scripts__edit_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help scripts edit commands' commands "$@"
}
(( $+functions[_eruptionctl__profiles__edit_commands] )) ||
_eruptionctl__profiles__edit_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl profiles edit commands' commands "$@"
}
(( $+functions[_eruptionctl__profiles__help__edit_commands] )) ||
_eruptionctl__profiles__help__edit_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl profiles help edit commands' commands "$@"
}
(( $+functions[_eruptionctl__scripts__edit_commands] )) ||
_eruptionctl__scripts__edit_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl scripts edit commands' commands "$@"
}
(( $+functions[_eruptionctl__scripts__help__edit_commands] )) ||
_eruptionctl__scripts__help__edit_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl scripts help edit commands' commands "$@"
}
(( $+functions[_eruptionctl__canvas__help_commands] )) ||
_eruptionctl__canvas__help_commands() {
    local commands; commands=(
'hue:Get or set the global '\''hue'\'' adjustment during canvas post-processing' \
'saturation:Get or set the global '\''saturation'\'' adjustment during canvas post-processing' \
'lightness:Get or set the global '\''lightness'\'' adjustment during canvas post-processing' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl canvas help commands' commands "$@"
}
(( $+functions[_eruptionctl__canvas__help__help_commands] )) ||
_eruptionctl__canvas__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl canvas help help commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__help_commands] )) ||
_eruptionctl__color-schemes__help_commands() {
    local commands; commands=(
'list:List all color schemes known to Eruption' \
'add:Add a new named color scheme' \
'remove:Remove a color scheme by name' \
'import:Import a color scheme from a file, e.g.: like the Pywal configuration' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl color-schemes help commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__help__help_commands] )) ||
_eruptionctl__color-schemes__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl color-schemes help help commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__import__help_commands] )) ||
_eruptionctl__color-schemes__import__help_commands() {
    local commands; commands=(
'pywal:Import an existing Pywal color scheme' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl color-schemes import help commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__import__help__help_commands] )) ||
_eruptionctl__color-schemes__import__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl color-schemes import help help commands' commands "$@"
}
(( $+functions[_eruptionctl__config__help_commands] )) ||
_eruptionctl__config__help_commands() {
    local commands; commands=(
'brightness:Get or set the global brightness of the LEDs' \
'soundfx:Get or set the state of SoundFX' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl config help commands' commands "$@"
}
(( $+functions[_eruptionctl__config__help__help_commands] )) ||
_eruptionctl__config__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl config help help commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__help_commands] )) ||
_eruptionctl__devices__help_commands() {
    local commands; commands=(
'list:List connected devices and their indices (run this first)' \
'info:Get information about a specific device' \
'status:Get status of a specific device' \
'brightness:Get or set the device specific brightness of the LEDs' \
'profile:Get or set the current profile (applicable for some devices)' \
'dpi:Get or set the DPI parameter (applicable for some mice)' \
'rate:Get or set the bus poll rate' \
'debounce:Get or set the debounce parameter (applicable for some mice)' \
'distance:Get or set the DCU parameter (applicable for some mice)' \
'angle-snapping:Get or set the angle-snapping parameter (applicable for some mice)' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl devices help commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__help__help_commands] )) ||
_eruptionctl__devices__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices help help commands' commands "$@"
}
(( $+functions[_eruptionctl__help_commands] )) ||
_eruptionctl__help_commands() {
    local commands; commands=(
'canvas:Configure post-processing filters of the global canvas' \
'config:Configuration related sub-commands' \
'color-schemes:Define, import or delete a named color scheme' \
'devices:Get or set some device specific configuration parameters' \
'status:Shows the currently active profile or slot' \
'switch:Switch to a different profile or slot' \
'profiles:Profile related sub-commands' \
'names:Naming related commands such as renaming of profile slots' \
'scripts:Script related sub-commands' \
'param:Get or set script parameters on the currently active profile' \
'completions:Generate shell completions' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl help commands' commands "$@"
}
(( $+functions[_eruptionctl__help__help_commands] )) ||
_eruptionctl__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help help commands' commands "$@"
}
(( $+functions[_eruptionctl__names__help_commands] )) ||
_eruptionctl__names__help_commands() {
    local commands; commands=(
'list:List slot names' \
'set:Set the name of a single profile slot' \
'set-all:Set all the profile slot names at once' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl names help commands' commands "$@"
}
(( $+functions[_eruptionctl__names__help__help_commands] )) ||
_eruptionctl__names__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl names help help commands' commands "$@"
}
(( $+functions[_eruptionctl__profiles__help_commands] )) ||
_eruptionctl__profiles__help_commands() {
    local commands; commands=(
'info:Show info about a profile' \
'edit:Edit a profile' \
'list:List available profiles' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl profiles help commands' commands "$@"
}
(( $+functions[_eruptionctl__profiles__help__help_commands] )) ||
_eruptionctl__profiles__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl profiles help help commands' commands "$@"
}
(( $+functions[_eruptionctl__scripts__help_commands] )) ||
_eruptionctl__scripts__help_commands() {
    local commands; commands=(
'info:Show info about a script' \
'edit:Edit a script' \
'list:List available scripts' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl scripts help commands' commands "$@"
}
(( $+functions[_eruptionctl__scripts__help__help_commands] )) ||
_eruptionctl__scripts__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl scripts help help commands' commands "$@"
}
(( $+functions[_eruptionctl__status__help_commands] )) ||
_eruptionctl__status__help_commands() {
    local commands; commands=(
'profile:Shows the currently active profile' \
'slot:Shows the currently active slot' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl status help commands' commands "$@"
}
(( $+functions[_eruptionctl__status__help__help_commands] )) ||
_eruptionctl__status__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl status help help commands' commands "$@"
}
(( $+functions[_eruptionctl__switch__help_commands] )) ||
_eruptionctl__switch__help_commands() {
    local commands; commands=(
'profile:Switch profiles' \
'slot:Switch slots' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl switch help commands' commands "$@"
}
(( $+functions[_eruptionctl__switch__help__help_commands] )) ||
_eruptionctl__switch__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl switch help help commands' commands "$@"
}
(( $+functions[_eruptionctl__canvas__help__hue_commands] )) ||
_eruptionctl__canvas__help__hue_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl canvas help hue commands' commands "$@"
}
(( $+functions[_eruptionctl__canvas__hue_commands] )) ||
_eruptionctl__canvas__hue_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl canvas hue commands' commands "$@"
}
(( $+functions[_eruptionctl__help__canvas__hue_commands] )) ||
_eruptionctl__help__canvas__hue_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help canvas hue commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__help__import_commands] )) ||
_eruptionctl__color-schemes__help__import_commands() {
    local commands; commands=(
'pywal:Import an existing Pywal color scheme' \
    )
    _describe -t commands 'eruptionctl color-schemes help import commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__import_commands] )) ||
_eruptionctl__color-schemes__import_commands() {
    local commands; commands=(
'pywal:Import an existing Pywal color scheme' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl color-schemes import commands' commands "$@"
}
(( $+functions[_eruptionctl__help__color-schemes__import_commands] )) ||
_eruptionctl__help__color-schemes__import_commands() {
    local commands; commands=(
'pywal:Import an existing Pywal color scheme' \
    )
    _describe -t commands 'eruptionctl help color-schemes import commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__help__info_commands] )) ||
_eruptionctl__devices__help__info_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices help info commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__info_commands] )) ||
_eruptionctl__devices__info_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices info commands' commands "$@"
}
(( $+functions[_eruptionctl__help__devices__info_commands] )) ||
_eruptionctl__help__devices__info_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help devices info commands' commands "$@"
}
(( $+functions[_eruptionctl__help__profiles__info_commands] )) ||
_eruptionctl__help__profiles__info_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help profiles info commands' commands "$@"
}
(( $+functions[_eruptionctl__help__scripts__info_commands] )) ||
_eruptionctl__help__scripts__info_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help scripts info commands' commands "$@"
}
(( $+functions[_eruptionctl__profiles__help__info_commands] )) ||
_eruptionctl__profiles__help__info_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl profiles help info commands' commands "$@"
}
(( $+functions[_eruptionctl__profiles__info_commands] )) ||
_eruptionctl__profiles__info_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl profiles info commands' commands "$@"
}
(( $+functions[_eruptionctl__scripts__help__info_commands] )) ||
_eruptionctl__scripts__help__info_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl scripts help info commands' commands "$@"
}
(( $+functions[_eruptionctl__scripts__info_commands] )) ||
_eruptionctl__scripts__info_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl scripts info commands' commands "$@"
}
(( $+functions[_eruptionctl__canvas__help__lightness_commands] )) ||
_eruptionctl__canvas__help__lightness_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl canvas help lightness commands' commands "$@"
}
(( $+functions[_eruptionctl__canvas__lightness_commands] )) ||
_eruptionctl__canvas__lightness_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl canvas lightness commands' commands "$@"
}
(( $+functions[_eruptionctl__help__canvas__lightness_commands] )) ||
_eruptionctl__help__canvas__lightness_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help canvas lightness commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__help__list_commands] )) ||
_eruptionctl__color-schemes__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl color-schemes help list commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__list_commands] )) ||
_eruptionctl__color-schemes__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl color-schemes list commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__help__list_commands] )) ||
_eruptionctl__devices__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices help list commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__list_commands] )) ||
_eruptionctl__devices__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices list commands' commands "$@"
}
(( $+functions[_eruptionctl__help__color-schemes__list_commands] )) ||
_eruptionctl__help__color-schemes__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help color-schemes list commands' commands "$@"
}
(( $+functions[_eruptionctl__help__devices__list_commands] )) ||
_eruptionctl__help__devices__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help devices list commands' commands "$@"
}
(( $+functions[_eruptionctl__help__names__list_commands] )) ||
_eruptionctl__help__names__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help names list commands' commands "$@"
}
(( $+functions[_eruptionctl__help__profiles__list_commands] )) ||
_eruptionctl__help__profiles__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help profiles list commands' commands "$@"
}
(( $+functions[_eruptionctl__help__scripts__list_commands] )) ||
_eruptionctl__help__scripts__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help scripts list commands' commands "$@"
}
(( $+functions[_eruptionctl__names__help__list_commands] )) ||
_eruptionctl__names__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl names help list commands' commands "$@"
}
(( $+functions[_eruptionctl__names__list_commands] )) ||
_eruptionctl__names__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl names list commands' commands "$@"
}
(( $+functions[_eruptionctl__profiles__help__list_commands] )) ||
_eruptionctl__profiles__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl profiles help list commands' commands "$@"
}
(( $+functions[_eruptionctl__profiles__list_commands] )) ||
_eruptionctl__profiles__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl profiles list commands' commands "$@"
}
(( $+functions[_eruptionctl__scripts__help__list_commands] )) ||
_eruptionctl__scripts__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl scripts help list commands' commands "$@"
}
(( $+functions[_eruptionctl__scripts__list_commands] )) ||
_eruptionctl__scripts__list_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl scripts list commands' commands "$@"
}
(( $+functions[_eruptionctl__help__names_commands] )) ||
_eruptionctl__help__names_commands() {
    local commands; commands=(
'list:List slot names' \
'set:Set the name of a single profile slot' \
'set-all:Set all the profile slot names at once' \
    )
    _describe -t commands 'eruptionctl help names commands' commands "$@"
}
(( $+functions[_eruptionctl__names_commands] )) ||
_eruptionctl__names_commands() {
    local commands; commands=(
'list:List slot names' \
'set:Set the name of a single profile slot' \
'set-all:Set all the profile slot names at once' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl names commands' commands "$@"
}
(( $+functions[_eruptionctl__help__param_commands] )) ||
_eruptionctl__help__param_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help param commands' commands "$@"
}
(( $+functions[_eruptionctl__param_commands] )) ||
_eruptionctl__param_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl param commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__help__profile_commands] )) ||
_eruptionctl__devices__help__profile_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices help profile commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__profile_commands] )) ||
_eruptionctl__devices__profile_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices profile commands' commands "$@"
}
(( $+functions[_eruptionctl__help__devices__profile_commands] )) ||
_eruptionctl__help__devices__profile_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help devices profile commands' commands "$@"
}
(( $+functions[_eruptionctl__help__status__profile_commands] )) ||
_eruptionctl__help__status__profile_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help status profile commands' commands "$@"
}
(( $+functions[_eruptionctl__help__switch__profile_commands] )) ||
_eruptionctl__help__switch__profile_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help switch profile commands' commands "$@"
}
(( $+functions[_eruptionctl__status__help__profile_commands] )) ||
_eruptionctl__status__help__profile_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl status help profile commands' commands "$@"
}
(( $+functions[_eruptionctl__status__profile_commands] )) ||
_eruptionctl__status__profile_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl status profile commands' commands "$@"
}
(( $+functions[_eruptionctl__switch__help__profile_commands] )) ||
_eruptionctl__switch__help__profile_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl switch help profile commands' commands "$@"
}
(( $+functions[_eruptionctl__switch__profile_commands] )) ||
_eruptionctl__switch__profile_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl switch profile commands' commands "$@"
}
(( $+functions[_eruptionctl__help__profiles_commands] )) ||
_eruptionctl__help__profiles_commands() {
    local commands; commands=(
'info:Show info about a profile' \
'edit:Edit a profile' \
'list:List available profiles' \
    )
    _describe -t commands 'eruptionctl help profiles commands' commands "$@"
}
(( $+functions[_eruptionctl__profiles_commands] )) ||
_eruptionctl__profiles_commands() {
    local commands; commands=(
'info:Show info about a profile' \
'edit:Edit a profile' \
'list:List available profiles' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl profiles commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__help__import__pywal_commands] )) ||
_eruptionctl__color-schemes__help__import__pywal_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl color-schemes help import pywal commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__import__help__pywal_commands] )) ||
_eruptionctl__color-schemes__import__help__pywal_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl color-schemes import help pywal commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__import__pywal_commands] )) ||
_eruptionctl__color-schemes__import__pywal_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl color-schemes import pywal commands' commands "$@"
}
(( $+functions[_eruptionctl__help__color-schemes__import__pywal_commands] )) ||
_eruptionctl__help__color-schemes__import__pywal_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help color-schemes import pywal commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__help__rate_commands] )) ||
_eruptionctl__devices__help__rate_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices help rate commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__rate_commands] )) ||
_eruptionctl__devices__rate_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices rate commands' commands "$@"
}
(( $+functions[_eruptionctl__help__devices__rate_commands] )) ||
_eruptionctl__help__devices__rate_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help devices rate commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__help__remove_commands] )) ||
_eruptionctl__color-schemes__help__remove_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl color-schemes help remove commands' commands "$@"
}
(( $+functions[_eruptionctl__color-schemes__remove_commands] )) ||
_eruptionctl__color-schemes__remove_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl color-schemes remove commands' commands "$@"
}
(( $+functions[_eruptionctl__help__color-schemes__remove_commands] )) ||
_eruptionctl__help__color-schemes__remove_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help color-schemes remove commands' commands "$@"
}
(( $+functions[_eruptionctl__canvas__help__saturation_commands] )) ||
_eruptionctl__canvas__help__saturation_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl canvas help saturation commands' commands "$@"
}
(( $+functions[_eruptionctl__canvas__saturation_commands] )) ||
_eruptionctl__canvas__saturation_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl canvas saturation commands' commands "$@"
}
(( $+functions[_eruptionctl__help__canvas__saturation_commands] )) ||
_eruptionctl__help__canvas__saturation_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help canvas saturation commands' commands "$@"
}
(( $+functions[_eruptionctl__help__scripts_commands] )) ||
_eruptionctl__help__scripts_commands() {
    local commands; commands=(
'info:Show info about a script' \
'edit:Edit a script' \
'list:List available scripts' \
    )
    _describe -t commands 'eruptionctl help scripts commands' commands "$@"
}
(( $+functions[_eruptionctl__scripts_commands] )) ||
_eruptionctl__scripts_commands() {
    local commands; commands=(
'info:Show info about a script' \
'edit:Edit a script' \
'list:List available scripts' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl scripts commands' commands "$@"
}
(( $+functions[_eruptionctl__help__names__set_commands] )) ||
_eruptionctl__help__names__set_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help names set commands' commands "$@"
}
(( $+functions[_eruptionctl__names__help__set_commands] )) ||
_eruptionctl__names__help__set_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl names help set commands' commands "$@"
}
(( $+functions[_eruptionctl__names__set_commands] )) ||
_eruptionctl__names__set_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl names set commands' commands "$@"
}
(( $+functions[_eruptionctl__help__names__set-all_commands] )) ||
_eruptionctl__help__names__set-all_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help names set-all commands' commands "$@"
}
(( $+functions[_eruptionctl__names__help__set-all_commands] )) ||
_eruptionctl__names__help__set-all_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl names help set-all commands' commands "$@"
}
(( $+functions[_eruptionctl__names__set-all_commands] )) ||
_eruptionctl__names__set-all_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl names set-all commands' commands "$@"
}
(( $+functions[_eruptionctl__help__status__slot_commands] )) ||
_eruptionctl__help__status__slot_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help status slot commands' commands "$@"
}
(( $+functions[_eruptionctl__help__switch__slot_commands] )) ||
_eruptionctl__help__switch__slot_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help switch slot commands' commands "$@"
}
(( $+functions[_eruptionctl__status__help__slot_commands] )) ||
_eruptionctl__status__help__slot_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl status help slot commands' commands "$@"
}
(( $+functions[_eruptionctl__status__slot_commands] )) ||
_eruptionctl__status__slot_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl status slot commands' commands "$@"
}
(( $+functions[_eruptionctl__switch__help__slot_commands] )) ||
_eruptionctl__switch__help__slot_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl switch help slot commands' commands "$@"
}
(( $+functions[_eruptionctl__switch__slot_commands] )) ||
_eruptionctl__switch__slot_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl switch slot commands' commands "$@"
}
(( $+functions[_eruptionctl__config__help__soundfx_commands] )) ||
_eruptionctl__config__help__soundfx_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl config help soundfx commands' commands "$@"
}
(( $+functions[_eruptionctl__config__soundfx_commands] )) ||
_eruptionctl__config__soundfx_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl config soundfx commands' commands "$@"
}
(( $+functions[_eruptionctl__help__config__soundfx_commands] )) ||
_eruptionctl__help__config__soundfx_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help config soundfx commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__help__status_commands] )) ||
_eruptionctl__devices__help__status_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices help status commands' commands "$@"
}
(( $+functions[_eruptionctl__devices__status_commands] )) ||
_eruptionctl__devices__status_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl devices status commands' commands "$@"
}
(( $+functions[_eruptionctl__help__devices__status_commands] )) ||
_eruptionctl__help__devices__status_commands() {
    local commands; commands=()
    _describe -t commands 'eruptionctl help devices status commands' commands "$@"
}
(( $+functions[_eruptionctl__help__status_commands] )) ||
_eruptionctl__help__status_commands() {
    local commands; commands=(
'profile:Shows the currently active profile' \
'slot:Shows the currently active slot' \
    )
    _describe -t commands 'eruptionctl help status commands' commands "$@"
}
(( $+functions[_eruptionctl__status_commands] )) ||
_eruptionctl__status_commands() {
    local commands; commands=(
'profile:Shows the currently active profile' \
'slot:Shows the currently active slot' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl status commands' commands "$@"
}
(( $+functions[_eruptionctl__help__switch_commands] )) ||
_eruptionctl__help__switch_commands() {
    local commands; commands=(
'profile:Switch profiles' \
'slot:Switch slots' \
    )
    _describe -t commands 'eruptionctl help switch commands' commands "$@"
}
(( $+functions[_eruptionctl__switch_commands] )) ||
_eruptionctl__switch_commands() {
    local commands; commands=(
'profile:Switch profiles' \
'slot:Switch slots' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'eruptionctl switch commands' commands "$@"
}

_eruptionctl "$@"
